server {
    server_name api.codecat-otto.shop;

    # 로그 파일 설정
    access_log /var/log/nginx/api.codecat-otto.access.log;
    error_log /var/log/nginx/api.codecat-otto.error.log;

    # NestJS 애플리케이션으로 프록시
    location / {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 추가 헤더 설정
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # IMPORTANT: Nginx에서 CORS 헤더를 추가하지 않음!
        # NestJS가 설정한 CORS 헤더를 그대로 전달
        # add_header 지시어를 제거하고 proxy_pass_header 사용은 불필요
        
        # 타임아웃 설정 (API 특성상 길게 설정)
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # 버퍼 설정
        proxy_buffering off;
    }

    # WebSocket 지원 (Socket.io 등 사용 시)
    location /socket.io/ {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check 엔드포인트 (모니터링용)
    location /health {
        proxy_pass http://localhost:4000/health;
        access_log off;
    }

    # API 문서 (Swagger 등)
    location /docs {
        proxy_pass http://localhost:4000/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 파일 업로드 크기 제한 (API에 맞게 조정)
    client_max_body_size 50M;
    
    # Body 버퍼 크기 설정
    client_body_buffer_size 1M;

    # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype;

    # 보안 헤더 (CORS와 충돌하지 않는 헤더만)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.codecat-otto.shop/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.codecat-otto.shop/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = api.codecat-otto.shop) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name api.codecat-otto.shop;
    return 404; # managed by Certbot
}